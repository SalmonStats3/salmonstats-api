openapi: 3.0.0
paths:
  /v1/results/{salmon_id}:
    get:
      operationId: 取得
      summary: ''
      description: >-
        内部IDを指定してリザルトを一件取得します。存在しない場合は404エラーを返します。オオモノシャケ、イベント、潮位、バッジ、ネームプレート、ユニフォーム、スペシャル、ブキ、ステージ等のEnumの対応する値については
        https://github.com/tkgstrator/SplatNet3/tree/v2.x/Sources/SplatNet3/Enum/Ids
        をご参照ください。
      parameters:
        - name: salmon_id
          required: true
          in: path
          description: リザルトID
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoopResultResponse'
        '404':
          description: ''
      tags:
        - リザルト
  /v1/results:
    get:
      operationId: 一括取得
      summary: ''
      parameters:
        - name: offset
          required: false
          in: query
          description: オフセット
          schema:
            minimum: 0
            title: offset
            default: 0
            type: number
        - name: limit
          required: false
          in: query
          description: 上限値
          schema:
            minimum: 0
            maximum: 200
            title: limit
            default: 25
            type: number
        - name: sort
          required: false
          in: query
          description: ソートする項目
          schema:
            default: salmonId
            enum:
              - salmonId
              - playTime
              - goldenIkuraNum
              - ikuraNum
            type: string
        - name: order
          required: false
          in: query
          description: 降順または昇順
          schema:
            default: asc
            enum:
              - desc
              - asc
            type: string
        - name: member
          required: false
          in: query
          description: プレイヤーID
          schema:
            nullable: true
            type: string
        - name: nightLess
          required: false
          in: query
          description: 夜イベントを含むかどうか
          schema:
            nullable: true
            type: boolean
        - name: ikuraNum
          required: false
          in: query
          description: 最小獲得イクラ数
          schema:
            nullable: true
            type: number
        - name: goldenIkuraNum
          required: false
          in: query
          description: 最小納品金イクラ数
          schema:
            nullable: true
            type: number
        - name: isClear
          required: false
          in: query
          description: クリアしたかどうか
          schema:
            nullable: true
            type: boolean
        - name: isBossDefeated
          required: false
          in: query
          description: オカシラシャケをたおしたかどうか
          schema:
            nullable: true
            type: boolean
        - name: stageId
          required: false
          in: query
          description: ステージのID
          schema:
            nullable: true
            type: number
        - name: weaponList
          required: false
          in: query
          description: 支給されるブキ
          schema:
            minItems: 0
            maxItems: 4
            nullable: true
            type: array
            items:
              type: number
        - name: rule
          required: false
          in: query
          description: ルール
          schema:
            nullable: true
            default: REGULAR
            enum:
              - REGULAR
              - BIG_RUN
            type: string
        - name: mode
          required: false
          in: query
          description: モード
          schema:
            nullable: true
            default: REGULAR
            enum:
              - REGULAR
              - PRIVATE_CUSTOM
              - PRIVATE_SCENARIO
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      results:
                        items:
                          $ref: '#/components/schemas/CoopResultResponse'
                        type: array
        '404':
          description: ''
      tags:
        - リザルト
    post:
      operationId: 登録(SplatNet3)
      summary: ''
      description: イカリング3のデータを最大同時に50件まで登録します。`results`のキーを指定して、JSONデータを配列で送信してください。
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResultRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoopResultsCreateResponse'
        '400':
          description: ''
      tags:
        - リザルト
  /v2/results:
    post:
      operationId: 登録(Salmonia3+)
      summary: ''
      description: Salmonia3+形式のデータを最大同時に50件まで登録します。`results`のキーを指定して、JSONデータを配列で送信してください。
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomResultRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoopResultsCreateResponse'
        '400':
          description: ''
      tags:
        - リザルト
  /v1/schedules:
    get:
      operationId: 取得
      summary: ''
      description: スケジュールを一括で取得します
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomCoopScheduleResponse'
        '404':
          description: ''
      tags:
        - スケジュール
info:
  title: Salmon Stats+
  description: Salmon Stats for Splatoon 3 API documents. (development)
  version: 0.0.1
  contact:
    name: '@Salmonia3Dev'
    url: https://twitter.com/Salmonia3Dev
    email: nasawake.am@gmail.com
tags: []
servers: []
components:
  schemas:
    PaginatedDto:
      type: object
      properties:
        total:
          type: integer
          description: 総数
        limit:
          type: integer
          description: 上限数
        offset:
          type: integer
          description: オフセット
      required:
        - total
        - limit
        - offset
    CoopScheduleResponse:
      type: object
      properties:
        stageId:
          type: number
        rareWeapon:
          type: number
          nullable: true
        weaponList:
          type: array
          items:
            type: string
        mode:
          type: string
        rule:
          type: string
          enum:
            - REGULAR
            - BIG_RUN
      required:
        - stageId
        - rareWeapon
        - weaponList
        - mode
        - rule
    CoopPlayerResultResponse:
      type: object
      properties:
        pid:
          type: string
        name:
          type: string
        byname:
          type: string
        nameId:
          type: string
        badges:
          description: バッジのIDが返りますがつけていない場合は`null`が入ります
          maxItems: 3
          minItems: 3
          type: array
          items:
            type: number
        nameplate:
          type: number
          description: ネームプレートのIDが入ります
        textColor:
          description: RGBAが入ります
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: number
        uniform:
          type: number
          description: ユニフォームIDが入ります
        bossKillCountsTotal:
          type: number
        bossKillCounts:
          description: わからない場合は`null`が入ります
          maxItems: 14
          minItems: 14
          type: array
          items:
            type: number
        deadCount:
          type: number
        helpCount:
          type: number
        ikuraNum:
          type: number
        goldenIkuraNum:
          type: number
          description: コンテナに入れた金イクラの数です
        goldenIkuraAssistNum:
          type: number
        jobBonus:
          type: number
          nullable: true
        jobRate:
          type: number
          nullable: true
        jobScore:
          type: number
          nullable: true
        kumaPoint:
          type: number
          nullable: true
        gradeId:
          type: number
          maximum: 8
          minimum: 0
          nullable: true
        gradePoint:
          type: number
          maximum: 999
          minimum: 0
          nullable: true
        smellMeter:
          type: number
          description: オカシラメーター
          maximum: 5
          minimum: 0
          nullable: true
        species:
          type: string
          enum:
            - INKLING
            - OCTOLING
        specialId:
          type: number
        specialCounts:
          maxItems: 4
          minItems: 0
          type: array
          items:
            type: number
        weaponList:
          maxItems: 4
          minItems: 0
          type: array
          items:
            type: number
      required:
        - pid
        - name
        - byname
        - nameId
        - badges
        - nameplate
        - textColor
        - uniform
        - bossKillCountsTotal
        - bossKillCounts
        - deadCount
        - helpCount
        - ikuraNum
        - goldenIkuraNum
        - goldenIkuraAssistNum
        - jobBonus
        - jobRate
        - jobScore
        - kumaPoint
        - gradeId
        - gradePoint
        - smellMeter
        - species
        - specialId
        - specialCounts
        - weaponList
    EventId:
      type: string
      enum:
        - WATER_LEVELS
        - RUSH
        - GOLDIE_SEEKING
        - GRILLER
        - FOG
        - THE_MOTHERSHIP
        - COHOCK_CHARGE
        - GIANT_TORNADO
        - MUDMOUTH
    WaterId:
      type: string
      enum:
        - LOW_TIDE
        - NORMAL
        - HIGH_TIDE
    CoopWaveResultResponse:
      type: object
      properties:
        waveId:
          type: number
          description: 1~4の値が入ります
        eventType:
          $ref: '#/components/schemas/EventId'
        waterLevel:
          $ref: '#/components/schemas/WaterId'
        goldenIkuraNum:
          type: number
          description: EX-WAVEでは常に`null`が入ります
          nullable: true
        goldenIkuraPopNum:
          type: number
        quotaNum:
          type: number
          nullable: true
        isClear:
          type: boolean
          description: オカシラシャケを討伐できなかった場合は`false`が入ります
      required:
        - waveId
        - eventType
        - waterLevel
        - goldenIkuraNum
        - goldenIkuraPopNum
        - quotaNum
        - isClear
    CoopResultResponse:
      type: object
      properties:
        salmonId:
          type: number
          description: 固有のID
        uuid:
          type: string
          description: リザルトに紐付けられたUUID
          format: uuid
        bossCounts:
          maxItems: 14
          minItems: 14
          type: array
          items:
            type: number
        bossKillCounts:
          maxItems: 14
          minItems: 14
          type: array
          items:
            type: number
        ikuraNum:
          type: number
        goldenIkuraNum:
          type: number
        goldenIkuraAssistNum:
          type: number
        nightLess:
          type: boolean
          description: 夜イベントを含むかどうか
        dangerRate:
          type: number
        playTime:
          format: date-time
          type: string
        isClear:
          type: boolean
          description: WAVE3をクリアすればオカシラ失敗しても`true`が返ります
        failureWave:
          type: number
          description: 失敗したWAVEのidが返ります
          nullable: true
        isBossDefeated:
          type: boolean
          description: オカシラシャケを討伐できたかが返ります
          nullable: true
        bossId:
          type: number
          description: オカシラシャケのIDが返ります
          nullable: true
        schedule:
          $ref: '#/components/schemas/CoopScheduleResponse'
        players:
          minItems: 4
          type: array
          items:
            $ref: '#/components/schemas/CoopPlayerResultResponse'
        waves:
          minItems: 3
          type: array
          items:
            $ref: '#/components/schemas/CoopWaveResultResponse'
      required:
        - salmonId
        - uuid
        - bossCounts
        - bossKillCounts
        - ikuraNum
        - goldenIkuraNum
        - goldenIkuraAssistNum
        - nightLess
        - dangerRate
        - playTime
        - isClear
        - failureWave
        - isBossDefeated
        - bossId
        - schedule
        - players
        - waves
    IntegerId:
      type: object
      properties:
        id:
          type: number
      required:
        - id
    TextColorRequest:
      type: object
      properties:
        r:
          type: number
        g:
          type: number
        b:
          type: number
        a:
          type: number
      required:
        - r
        - g
        - b
        - a
    BackgroundRequest:
      type: object
      properties:
        id:
          type: number
        textColor:
          $ref: '#/components/schemas/TextColorRequest'
      required:
        - id
        - textColor
    NamePlateRequest:
      type: object
      properties:
        badges:
          maxItems: 3
          minItems: 3
          type: array
          items:
            $ref: '#/components/schemas/IntegerId'
        background:
          $ref: '#/components/schemas/BackgroundRequest'
      required:
        - badges
        - background
    PlayerResultRequest:
      type: object
      properties:
        id:
          type: string
        byname:
          type: string
        name:
          type: string
        nameId:
          type: string
        nameplate:
          $ref: '#/components/schemas/NamePlateRequest'
        uniform:
          $ref: '#/components/schemas/IntegerId'
        species:
          type: string
          enum:
            - INKLING
            - OCTOLING
      required:
        - id
        - byname
        - name
        - nameId
        - nameplate
        - uniform
        - species
    WeaponURL:
      type: object
      properties:
        url:
          type: number
      required:
        - url
    Weapon:
      type: object
      properties:
        image:
          $ref: '#/components/schemas/WeaponURL'
      required:
        - image
    SpecialRequest:
      type: object
      properties:
        weaponId:
          type: number
      required:
        - weaponId
    PlayerRequest:
      type: object
      properties:
        player:
          $ref: '#/components/schemas/PlayerResultRequest'
        defeatEnemyCount:
          type: number
        deliverCount:
          type: number
        goldenAssistCount:
          type: number
        goldenDeliverCount:
          type: number
        rescueCount:
          type: number
        rescuedCount:
          type: number
        weapons:
          maxItems: 4
          minItems: 4
          type: array
          items:
            $ref: '#/components/schemas/Weapon'
        specialWeapon:
          $ref: '#/components/schemas/SpecialRequest'
      required:
        - player
        - defeatEnemyCount
        - deliverCount
        - goldenAssistCount
        - goldenDeliverCount
        - rescueCount
        - rescuedCount
        - weapons
        - specialWeapon
    BossResult:
      type: object
      properties:
        hasDefeatBoss:
          type: boolean
        boss:
          $ref: '#/components/schemas/IntegerId'
      required:
        - hasDefeatBoss
        - boss
    EnemyResult:
      type: object
      properties:
        defeatCount:
          type: number
        teamDefeatCount:
          type: number
        popCount:
          type: number
        enemy:
          $ref: '#/components/schemas/IntegerId'
      required:
        - defeatCount
        - teamDefeatCount
        - popCount
        - enemy
    WaveResult:
      type: object
      properties:
        waveNumber:
          type: number
        waterLevel:
          type: number
        eventWave:
          $ref: '#/components/schemas/IntegerId'
        deliverNorm:
          type: number
        goldenPopCount:
          type: number
        teamDeliverCount:
          type: number
        specialWeapons:
          type: array
          items:
            type: string
      required:
        - waveNumber
        - waterLevel
        - eventWave
        - deliverNorm
        - goldenPopCount
        - teamDeliverCount
        - specialWeapons
    Scale:
      type: object
      properties:
        gold:
          type: number
        silver:
          type: number
        bronze:
          type: number
    StringId:
      type: object
      properties:
        id:
          type: string
      required:
        - id
    CoopHistoryDetailRequest:
      type: object
      properties:
        id:
          type: string
        dangerRate:
          type: number
        afterGrade:
          $ref: '#/components/schemas/IntegerId'
        resultWave:
          type: number
        playedTime:
          format: date-time
          type: string
        rule:
          type: string
          enum:
            - REGULAR
            - BIG_RUN
        coopStage:
          $ref: '#/components/schemas/IntegerId'
        scenarioCode:
          type: string
        myResult:
          $ref: '#/components/schemas/PlayerRequest'
        memberResults:
          type: array
          items:
            $ref: '#/components/schemas/PlayerRequest'
        bossResult:
          $ref: '#/components/schemas/BossResult'
        enemyResults:
          maxItems: 14
          minItems: 14
          type: array
          items:
            $ref: '#/components/schemas/EnemyResult'
        waveResults:
          maxItems: 3
          minItems: 3
          type: array
          items:
            $ref: '#/components/schemas/WaveResult'
        weapons:
          maxItems: 3
          minItems: 3
          type: array
          items:
            $ref: '#/components/schemas/Weapon'
        afterGradePoint:
          type: number
        jobPoint:
          type: number
        jobScore:
          type: number
        jobRate:
          type: number
        jobBonus:
          type: number
        smellMeter:
          type: number
        scale:
          $ref: '#/components/schemas/Scale'
        nextHistoryDetail:
          $ref: '#/components/schemas/StringId'
        previousHistoryDetail:
          $ref: '#/components/schemas/StringId'
      required:
        - id
        - dangerRate
        - resultWave
        - playedTime
        - rule
        - coopStage
        - myResult
        - memberResults
        - bossResult
        - enemyResults
        - waveResults
        - weapons
        - afterGradePoint
        - jobPoint
        - jobScore
        - jobRate
        - jobBonus
        - smellMeter
        - scale
        - nextHistoryDetail
        - previousHistoryDetail
    CoopDataRequest:
      type: object
      properties:
        coopHistoryDetail:
          $ref: '#/components/schemas/CoopHistoryDetailRequest'
      required:
        - coopHistoryDetail
    CoopResultRequest:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CoopDataRequest'
      required:
        - data
    ResultRequest:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CoopResultRequest'
      required:
        - results
    CoopResultCreateResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        salmonId:
          type: number
      required:
        - uuid
        - salmonId
    CoopResultsCreateResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CoopResultCreateResponse'
      required:
        - results
    CustomCoopScheduleRequest:
      type: object
      properties:
        startTime:
          format: date-time
          type: string
        rule:
          type: string
          enum:
            - REGULAR
            - BIG_RUN
        mode:
          type: string
          enum:
            - REGULAR
            - PRIVATE_CUSTOM
            - PRIVATE_SCENARIO
        stageId:
          type: number
        weaponList:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: number
      required:
        - startTime
        - rule
        - mode
        - stageId
        - weaponList
    CustomCoopTextColorRequest:
      type: object
      properties:
        r:
          type: number
        g:
          type: number
        b:
          type: number
        a:
          type: number
      required:
        - r
        - g
        - b
        - a
    CustomCoopNameBackgroundRequest:
      type: object
      properties:
        id:
          type: number
        textColor:
          $ref: '#/components/schemas/CustomCoopTextColorRequest'
      required:
        - id
        - textColor
    CustomCoopNamePlateRequest:
      type: object
      properties:
        badges:
          maxItems: 3
          minItems: 3
          type: array
          items:
            type: number
        background:
          $ref: '#/components/schemas/CustomCoopNameBackgroundRequest'
      required:
        - badges
        - background
    CustomCoopPlayerRequest:
      type: object
      properties:
        id:
          type: string
        pid:
          type: string
        bossKillCountsTotal:
          type: number
        bossKillCounts:
          maxItems: 14
          minItems: 14
          type: array
          items:
            type: number
        name:
          type: string
        byname:
          type: string
        specialCounts:
          maxItems: 4
          minItems: 3
          type: array
          items:
            type: number
        isMyself:
          type: boolean
        nameplate:
          $ref: '#/components/schemas/CustomCoopNamePlateRequest'
        specialId:
          type: number
        helpCount:
          type: number
        deadCount:
          type: number
        weaponList:
          maxItems: 4
          minItems: 3
          type: array
          items:
            type: number
        nameId:
          type: string
        species:
          type: string
        uniform:
          type: number
        goldenIkuraNum:
          type: number
        ikuraNum:
          type: number
        goldenIkuraAssistNum:
          type: number
      required:
        - id
        - pid
        - bossKillCountsTotal
        - bossKillCounts
        - name
        - byname
        - specialCounts
        - isMyself
        - nameplate
        - helpCount
        - deadCount
        - weaponList
        - nameId
        - species
        - uniform
        - goldenIkuraNum
        - ikuraNum
        - goldenIkuraAssistNum
    CustomCoopWaveRequest:
      type: object
      properties:
        id:
          type: number
        eventType:
          type: number
        quotaNum:
          type: number
        goldenIkuraNum:
          type: number
        waterLevel:
          type: number
        goldenIkuraPopNum:
          type: number
        isClear:
          type: boolean
      required:
        - id
        - eventType
        - quotaNum
        - goldenIkuraNum
        - waterLevel
        - goldenIkuraPopNum
        - isClear
    CustomCoopJobResultRequest:
      type: object
      properties:
        isClear:
          type: boolean
        isBossDefeated:
          type: boolean
        bossId:
          type: number
        failureWave:
          type: number
      required:
        - isClear
        - isBossDefeated
        - bossId
        - failureWave
    CustomCoopResultRequest:
      type: object
      properties:
        schedule:
          $ref: '#/components/schemas/CustomCoopScheduleRequest'
        bossKillCounts:
          maxItems: 14
          minItems: 14
          type: array
          items:
            type: number
        bossCounts:
          maxItems: 14
          minItems: 14
          type: array
          items:
            type: number
        ikuraNum:
          type: number
        jobRate:
          type: number
        jobBonus:
          type: number
        jobScore:
          type: number
        gradeId:
          type: number
        gradePoint:
          type: number
        kumaPoint:
          type: number
        otherResults:
          type: array
          items:
            $ref: '#/components/schemas/CustomCoopPlayerRequest'
        myResult:
          $ref: '#/components/schemas/CustomCoopPlayerRequest'
        id:
          type: string
        uuid:
          type: string
          format: uuid
        waveDetails:
          type: array
          items:
            $ref: '#/components/schemas/CustomCoopWaveRequest'
        goldenIkuraNum:
          type: number
        dangerRate:
          type: number
        playTime:
          format: date-time
          type: string
        goldenIkuraAssistNum:
          type: number
        scale:
          type: array
          items:
            type: number
        jobResult:
          $ref: '#/components/schemas/CustomCoopJobResultRequest'
        smellMeter:
          type: number
      required:
        - schedule
        - bossKillCounts
        - bossCounts
        - ikuraNum
        - jobRate
        - jobBonus
        - jobScore
        - gradeId
        - gradePoint
        - kumaPoint
        - otherResults
        - myResult
        - id
        - uuid
        - waveDetails
        - goldenIkuraNum
        - dangerRate
        - playTime
        - goldenIkuraAssistNum
        - scale
        - jobResult
        - smellMeter
    CustomResultRequest:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomCoopResultRequest'
      required:
        - results
    CustomCoopScheduleResponse:
      type: object
      properties:
        stageId:
          type: number
        startTime:
          format: date-time
          type: string
        endTime:
          format: date-time
          type: string
        weaponList:
          type: array
          items:
            type: string
        rareWeapon:
          type: number
        mode:
          type: string
        rule:
          type: string
        setting:
          type: string
      required:
        - stageId
        - startTime
        - endTime
        - weaponList
        - rareWeapon
        - mode
        - rule
        - setting
